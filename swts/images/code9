package com.test;

import org.eclipse.swt.SWT;
import org.eclipse.swt.layout.FillLayout;
import org.eclipse.swt.widgets.*;
import org.eclipse.swt.events.*;
import org.eclipse.swt.graphics.Point;
import org.eclipse.swt.graphics.Rectangle;

public class TreeTableExample {
    private static class TreeTableMousePositionHandler {
        private Tree tree;

        public TreeTableMousePositionHandler(Tree tree) {
            this.tree = tree;
            addMouseMoveListener();
        }

        private void addMouseMoveListener() {
            tree.addMouseMoveListener(new MouseMoveListener() {
                @Override
                public void mouseMove(MouseEvent e) {
                    Point pt = new Point(e.x, e.y);
                    TreeItem item = tree.getItem(pt);
                    int columnIndex = -1;
                    
                    if (item != null) {
                        for (int i = 0; i < tree.getColumnCount(); i++) {
                            Rectangle bounds = item.getBounds(i);
                            if (bounds.contains(pt)) {
                                columnIndex = i;
                                break;
                            }
                        }
                        
                        int rowIndex = -1;
                        TreeItem[] items = tree.getItems();
                        for (int i = 0; i < items.length; i++) {
                            if (items[i].equals(item)) {
                                rowIndex = i;
                                break;
                            }
                        }
                        
                        if (rowIndex != -1 && columnIndex != -1) {
                            System.out.println("Row Index: " + rowIndex);
                            System.out.println("Column Index: " + columnIndex);
                        }
                    }
                }
            });
        }
    }

    public static void main(String[] args) {
        Display display = new Display();
        Shell shell = new Shell(display);
        shell.setText("TreeTable Example");
        shell.setLayout(new FillLayout());

        // Tree 생성
        Tree tree = new Tree(shell, SWT.BORDER | SWT.FULL_SELECTION);
        tree.setHeaderVisible(true);
        tree.setLinesVisible(true);

        // 컬럼 생성
        String[] titles = {"Column 1", "Column 2", "Column 3"};
        for (String title : titles) {
            TreeColumn column = new TreeColumn(tree, SWT.NONE);
            column.setText(title);
            column.setWidth(100);
        }

        // 데이터 추가
        for (int i = 0; i < 5; i++) {
            TreeItem item = new TreeItem(tree, SWT.NONE);
            item.setText(new String[] {
                "Parent " + i,
                "Data " + i,
                "More " + i
            });

            // 자식 항목 추가
            for (int j = 0; j < 3; j++) {
                TreeItem childItem = new TreeItem(item, SWT.NONE);
                childItem.setText(new String[] {
                    "Child " + i + "-" + j,
                    "Child Data " + j,
                    "More Child " + j
                });
            }
        }

        // 마우스 위치 핸들러 추가
        new TreeTableMousePositionHandler(tree);

        // 모든 트리 항목 펼치기
        for (TreeItem item : tree.getItems()) {
            item.setExpanded(true);
        }

        // 셸 크기 설정 및 오픈
        shell.setSize(400, 300);
        shell.open();

        // 이벤트 루프
        while (!shell.isDisposed()) {
            if (!display.readAndDispatch()) {
                display.sleep();
            }
        }
        display.dispose();
    }
}