Tree tree = treeViewer.getTree();

// 현재 마우스 위치한 셀 정보를 저장
final Point[] highlightedCell = {null}; // [columnIndex, rowIndex]

// 마우스 이동 이벤트로 셀 추적
tree.addListener(SWT.MouseMove, event -> {
    Point point = new Point(event.x, event.y);
    TreeItem item = tree.getItem(point);

    if (item != null) {
        for (int i = 0; i < tree.getColumnCount(); i++) {
            Rectangle bounds = item.getBounds(i);
            if (bounds.contains(point)) {
                // 선택된 셀(행과 열) 저장
                highlightedCell[0] = new Point(i, tree.indexOf(item));
                tree.redraw(); // UI 갱신
                return;
            }
        }
    }

    // 마우스가 셀 밖으로 나가면 초기화
    if (highlightedCell[0] != null) {
        highlightedCell[0] = null;
        tree.redraw(); // UI 갱신
    }
});

// PaintItem 이벤트로 특정 셀 하이라이팅
tree.addListener(SWT.PaintItem, event -> {
    if (highlightedCell[0] != null) {
        int highlightColumn = highlightedCell[0].x; // 선택된 컬럼 인덱스
        int highlightRow = highlightedCell[0].y;   // 선택된 행 인덱스

        TreeItem item = (TreeItem) event.item;

        // 현재 행이 선택된 행인지 확인
        if (highlightRow == tree.indexOf(item) && highlightColumn == event.index) {
            // 선택된 셀 배경 강조
            event.gc.setBackground(Display.getDefault().getSystemColor(SWT.COLOR_YELLOW));
            event.gc.fillRectangle(item.getBounds(event.index));
        }
    }

    // 기본 텍스트와 이미지 렌더링
    TreeItem item = (TreeItem) event.item;
    Image image = item.getImage(event.index);
    if (image != null) {
        Rectangle bounds = item.getBounds(event.index);
        int x = bounds.x + (bounds.width - image.getBounds().width) / 2;
        int y = bounds.y + (bounds.height - image.getBounds().height) / 2;
        event.gc.drawImage(image, x, y);
    }
});
