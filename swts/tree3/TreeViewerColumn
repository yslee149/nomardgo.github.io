package com.test.tree4;

import org.eclipse.jface.viewers.TreeViewer;
import org.eclipse.swt.SWT;
import org.eclipse.swt.layout.FillLayout;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.TreeColumn;
import org.eclipse.swt.widgets.TreeItem;

public class TreeViewerExample {

    public static void main(String[] args) {
        Display display = new Display();
        Shell shell = new Shell(display);
        shell.setLayout(new FillLayout());

        // TreeViewer 생성
        TreeViewer treeViewer = new TreeViewer(shell, SWT.BORDER | SWT.FULL_SELECTION);
        treeViewer.getTree().setHeaderVisible(true);

        // 1번 컬럼: 너비 0으로 숨김
        TreeColumn column1 = new TreeColumn(treeViewer.getTree(), SWT.NONE);
        column1.setText("Column 1");
        column1.setWidth(0);
        column1.setResizable(false);

        // 2번 컬럼
        TreeColumn column2 = new TreeColumn(treeViewer.getTree(), SWT.NONE);
        column2.setText("Column 2");

        // 3번 컬럼
        TreeColumn column3 = new TreeColumn(treeViewer.getTree(), SWT.NONE);
        column3.setText("Column 3");

        // 4번 컬럼: 고정 너비 50
        TreeColumn column4 = new TreeColumn(treeViewer.getTree(), SWT.NONE);
        column4.setText("Column 4");
        column4.setWidth(50);
        column4.setResizable(false);

        // 5번 컬럼
        TreeColumn column5 = new TreeColumn(treeViewer.getTree(), SWT.NONE);
        column5.setText("Column 5");

        // 6번 컬럼
        TreeColumn column6 = new TreeColumn(treeViewer.getTree(), SWT.NONE);
        column6.setText("Column 6");

        // 테스트 데이터 추가
        addTestData(treeViewer);

        // Layout 적용
        treeViewer.getTree().addListener(SWT.Resize, event -> {
            int totalWidth = treeViewer.getTree().getClientArea().width;
            int remainingWidth = totalWidth - column4.getWidth(); // 4번 컬럼 고정 너비 제외
            int dynamicWidth = remainingWidth / 4; // 나머지 4개의 컬럼에 너비 배분

            column2.setWidth(dynamicWidth);
            column3.setWidth(dynamicWidth);
            column5.setWidth(dynamicWidth);
            column6.setWidth(dynamicWidth);
        });

        shell.setSize(800, 600);
        shell.open();

        while (!shell.isDisposed()) {
            if (!display.readAndDispatch()) {
                display.sleep();
            }
        }
        display.dispose();
    }

    // 테스트 데이터를 TreeViewer에 추가하는 메소드
    private static void addTestData(TreeViewer treeViewer) {
        // 최상위 부모 노드
        TreeItem parentItem1 = new TreeItem(treeViewer.getTree(), SWT.NONE);
        parentItem1.setText(new String[] { "", "Parent 1", "Data 1", "P1-Col4", "P1-Col5", "P1-Col6" });

        // Parent 1의 자식 노드
        TreeItem childItem1 = new TreeItem(parentItem1, SWT.NONE);
        childItem1.setText(new String[] { "", "Child 1-1", "Data 1-1", "C1-1-Col4", "C1-1-Col5", "C1-1-Col6" });

        TreeItem childItem2 = new TreeItem(parentItem1, SWT.NONE);
        childItem2.setText(new String[] { "", "Child 1-2", "Data 1-2", "C1-2-Col4", "C1-2-Col5", "C1-2-Col6" });

        // 또 다른 부모 노드
        TreeItem parentItem2 = new TreeItem(treeViewer.getTree(), SWT.NONE);
        parentItem2.setText(new String[] { "", "Parent 2", "Data 2", "P2-Col4", "P2-Col5", "P2-Col6" });

        // Parent 2의 자식 노드
        TreeItem childItem3 = new TreeItem(parentItem2, SWT.NONE);
        childItem3.setText(new String[] { "", "Child 2-1", "Data 2-1", "C2-1-Col4", "C2-1-Col5", "C2-1-Col6" });

        TreeItem childItem4 = new TreeItem(parentItem2, SWT.NONE);
        childItem4.setText(new String[] { "", "Child 2-2", "Data 2-2", "C2-2-Col4", "C2-2-Col5", "C2-2-Col6" });

        // Parent 1, Parent 2의 자식 노드가 모두 추가된 후, 부모 노드 확장
        parentItem1.setExpanded(true);
        parentItem2.setExpanded(true);
    }
}
