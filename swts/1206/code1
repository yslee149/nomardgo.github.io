import java.util.*;

public class GenerateBasedOnPattern {
    public static void main(String[] args) {
        // 기존 데이터
        List<Integer> data = Arrays.asList(150, 152, 154, 156, 158, 160);

        // 새로운 데이터 생성
        int additionalCount = 5; // 생성할 데이터 개수
        List<Integer> newData = generateNextValues(data, additionalCount);

        System.out.println("전체 데이터: " + newData);
    }

    public static List<Integer> generateNextValues(List<Integer> baseData, int count) {
        List<Integer> newData = new ArrayList<>(baseData);

        // 데이터 간 평균 증감 계산
        int lastIndex = newData.size() - 1;
        int difference = newData.get(lastIndex) - newData.get(lastIndex - 1);

        // 새 데이터 생성
        for (int i = 0; i < count; i++) {
            int nextValue = newData.get(newData.size() - 1) + difference;
            newData.add(nextValue);
        }

        return newData;
    }
}

--------------



import java.util.*;
import java.util.stream.*;

public class StreamNextStringGenerator {
    public static void main(String[] args) {
        List<String> currentStrings = Arrays.asList("aaaa.0", "aaaa.1", "aaaa.9");

        List<String> nextStrings = currentStrings.stream()
            .map(StreamNextStringGenerator::generateNextString)
            .collect(Collectors.toList());

        System.out.println("현재 문자열 리스트: " + currentStrings);
        System.out.println("다음 문자열 리스트: " + nextStrings);
    }

    public static String generateNextString(String current) {
        int lastDotIndex = current.lastIndexOf('.');
        if (lastDotIndex == -1 || lastDotIndex == current.length() - 1) {
            throw new IllegalArgumentException("올바르지 않은 형식의 문자열입니다: " + current);
        }

        String prefix = current.substring(0, lastDotIndex);
        String numberPart = current.substring(lastDotIndex + 1);

        int number = Integer.parseInt(numberPart);
        number++;

        return prefix + "." + number;
    }
}





------------

package hello.world;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class GenerateBasedOnPattern {
    public static void main(String[] args) {
        // 기존 데이터
        List<Integer> data = Arrays.asList(150, 152, 154, 156, 158, 160);

        // 새로운 데이터 생성
        int additionalCount = 5; // 생성할 데이터 개수
        boolean includeBase = true; // 기존 데이터 포함 여부

        List<Integer> newData = generateNextValues(data, additionalCount, includeBase);

        System.out.println("전체 데이터: " + newData);
    }

    public static List<Integer> generateNextValues(List<Integer> baseData, int count, boolean includeBase) {
        List<Integer> newData = new ArrayList<>();

        if (includeBase) {
            newData.addAll(baseData); // 기존 데이터 포함
        }

        // 데이터 간 평균 증감 계산
        int lastIndex = baseData.size() - 1;
        int difference = baseData.get(lastIndex) - baseData.get(lastIndex - 1);
        int startValue = baseData.get(lastIndex);

        // 새 데이터 생성 (기존 데이터 제외)
        for (int i = 0; i < count; i++) {
            startValue += difference;
            newData.add(startValue);
        }

        return newData;
    }
}
---------------------------




package hello.world;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class GenerateBasedOnPattern {
    public static void main(String[] args) {
        // 기존 데이터
        List<Integer> data = Arrays.asList(150, 152, 154, 156, 158, 160);

        // 새로운 데이터 생성
        int additionalCount = 5; // 생성할 데이터 개수
        boolean includeBase = true; // 기존 데이터 포함 여부

        List<Integer> newData = generateNextValues(data, additionalCount, includeBase);

        System.out.println("전체 데이터: " + newData);
    }

    public static List<Integer> generateNextValues(List<Integer> baseData, int count, boolean includeBase) {
        List<Integer> newData = new ArrayList<>();

        if (includeBase) {
            newData.addAll(baseData); // 기존 데이터 포함
        }

        // 데이터 간 평균 증감 계산
        int lastIndex = baseData.size() - 1;
        int difference = baseData.get(lastIndex) - baseData.get(lastIndex - 1);
        int startValue = baseData.get(lastIndex);

        // 새 데이터 생성 (기존 데이터 제외)
        for (int i = 0; i < count; i++) {
            startValue += difference;
            newData.add(startValue);
        }

        return newData;
    }
}



1207

package hello.world;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class GenerateBasedOnPattern {
    public static void main(String[] args) {
        // 기존 데이터
//        List<Integer> data = Arrays.asList(167);
    	List<Integer> data = Arrays.asList(28 , 29);
    	
        // 새로운 데이터 생성
        int additionalCount = 2; // 생성할 데이터 개수
        boolean includeBase = false; // 기존 데이터 포함 여부

        List<Integer> newData = generateNextValues(data, additionalCount, includeBase);

        System.out.println("전체 데이터: " + newData);
    }

    public static List<Integer> generateNextValues(List<Integer> baseData, int count, boolean includeBase) {
        List<Integer> newData = new ArrayList<>();

        if (includeBase) {
            newData.addAll(baseData); // 기존 데이터 포함
        }

        // 데이터 간 평균 증감 계산
        int lastIndex = baseData.size() - 1;
        int difference;

        if (baseData.size() == 1) {
            // 기본 증감 값을 설정 (예: 1)
            difference = 1;
        } else {
            difference = baseData.get(lastIndex) - baseData.get(lastIndex - 1);
        }

        int startValue = baseData.get(lastIndex);

        // 새 데이터 생성 (기존 데이터 제외)
        for (int i = 0; i < count; i++) {
            startValue += difference;
            newData.add(startValue);
        }

        return newData;
    }
}

