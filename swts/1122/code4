tree.addListener(SWT.MouseMove, new Listener() {
    @Override
    public void handleEvent(Event event) {
        Point point = new Point(event.x, event.y);
        ViewerCell cell = treeViewer.getCell(point);

        if (cell != null) {
            ViewerRow row = cell.getViewerRow();
            int columnIndex = cell.getColumnIndex();
            Object element = cell.getElement();

            // 마우스가 버튼 컬럼 위에 있을 때 커서 및 셀 강조 처리
            if (columnIndex == BUTTON_COLUMN_INDEX) {
                tree.setCursor(Display.getDefault().getSystemCursor(SWT.CURSOR_HAND));

                // 강조된 셀 관리
                if (highlightedCell != null && highlightedCell != cell) {
                    treeViewer.refresh(highlightedCell.getElement());
                }
                highlightedCell = cell;
                treeViewer.refresh(cell.getElement());
            } else {
                tree.setCursor(null);
                // 강조된 셀 복원
                if (highlightedCell != null) {
                    treeViewer.refresh(highlightedCell.getElement());
                    highlightedCell = null;
                }
            }

            // 여기서 row 또는 element를 사용하여 추가 작업 수행 가능
        } else {
            tree.setCursor(null);
            // 강조된 셀 복원
            if (highlightedCell != null) {
                treeViewer.refresh(highlightedCell.getElement());
                highlightedCell = null;
            }
        }
    }
});


---

tree.addListener(SWT.MouseMove, new Listener() {
    @Override
    public void handleEvent(Event event) {
        Point point = new Point(event.x, event.y);
        ViewerCell cell = treeViewer.getCell(point);

        if (cell != null) {
            ViewerRow row = cell.getViewerRow();
            TreeItem item = (TreeItem) row.getItem();

            // 행의 인덱스 얻기 (루트 아이템 기준)
            int rowIndex = tree.indexOf(item);

            // 행의 화면 좌표 얻기
            Rectangle rowBounds = item.getBounds();

            System.out.println("행 인덱스: " + rowIndex);
            System.out.println("행 위치: x=" + rowBounds.x + ", y=" + rowBounds.y);
            System.out.println("행 크기: width=" + rowBounds.width + ", height=" + rowBounds.height);

            // 추가 동작 수행 가능
        }
    }
});
