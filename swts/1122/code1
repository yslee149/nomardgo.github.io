final int BUTTON_COLUMN_INDEX = 1;

TreeViewer treeViewer = new TreeViewer(parent);
Tree tree = treeViewer.getTree();
tree.setData("treeViewer", treeViewer);

treeViewer.setLabelProvider(new ColumnLabelProvider() {
    @Override
    public void update(ViewerCell cell) {
        super.update(cell);

        if (cell.getColumnIndex() == BUTTON_COLUMN_INDEX) {
            Image buttonImage = ...; // 버튼 이미지 로드
            cell.setImage(buttonImage);
        }

        if (tree.getData("mouseListenerAdded") == null) {
            tree.addListener(SWT.MouseDown, new Listener() {
                @Override
                public void handleEvent(Event event) {
                    Point point = new Point(event.x, event.y);
                    ViewerCell clickedCell = treeViewer.getCell(point);

                    if (clickedCell != null) {
                        int columnIndex = clickedCell.getColumnIndex();
                        Object element = clickedCell.getElement();

                        if (columnIndex == BUTTON_COLUMN_INDEX) {
                            // 버튼 클릭 시 동작
                            System.out.println("버튼 클릭됨: " + element.toString());
                            // 추가 동작 구현
                        }
                    }
                }
            });

            tree.addListener(SWT.MouseMove, new Listener() {
                @Override
                public void handleEvent(Event event) {
                    Point point = new Point(event.x, event.y);
                    ViewerCell cell = treeViewer.getCell(point);
                    if (cell != null && cell.getColumnIndex() == BUTTON_COLUMN_INDEX) {
                        tree.setCursor(Display.getDefault().getSystemCursor(SWT.CURSOR_HAND));
                    } else {
                        tree.setCursor(null);
                    }
                }
            });

            tree.setData("mouseListenerAdded", true);
        }
    }
});
