import org.eclipse.jface.viewers.CellLabelProvider;
import org.eclipse.jface.viewers.ViewerCell;
import org.eclipse.jface.viewers.TreeViewerColumn;
import org.eclipse.swt.SWT;

// DepthAwareCellLabelProvider 클래스 정의
class DepthAwareCellLabelProvider extends CellLabelProvider {

    private TreeViewer treeViewer;

    // 생성자에서 TreeViewer를 받아서 사용
    public DepthAwareCellLabelProvider(TreeViewer treeViewer) {
        this.treeViewer = treeViewer;
    }

    @Override
    public void update(ViewerCell cell) {
        Object element = cell.getElement();
        if (element instanceof Integer) {
            int nodeId = (int) element;

            // 현재 항목의 깊이 계산
            int depth = getDepth(nodeId);

            // 깊이에 따른 간격 추가 (예: 깊이 * 4 공백)
            String indent = "    ".repeat(depth);

            // 셀에 표시될 텍스트 설정 (간격을 포함)
            cell.setText(indent + "Node ID: " + nodeId);
        }
    }

    // 주어진 요소의 깊이를 계산하는 헬퍼 메서드
    private int getDepth(int element) {
        int depth = 0;
        Object parent = treeViewer.getContentProvider().getParent(element);
        while (parent != null) {
            depth++;
            parent = treeViewer.getContentProvider().getParent(parent);
        }
        return depth;
    }
}

// TreeViewerColumn에 DepthAwareCellLabelProvider를 설정하는 코드
TreeViewerColumn column1 = new TreeViewerColumn(treeViewer, SWT.NONE);
column1.getColumn().setText("Depth Aware Column");
column1.getColumn().setWidth(300);

// DepthAwareCellLabelProvider를 설정
column1.setLabelProvider(new DepthAwareCellLabelProvider(treeViewer));

// TreeViewer 초기화
treeViewer.setInput(1);

/////////////


// 문자열을 주어진 횟수만큼 반복하는 헬퍼 메서드
public static String repeat(String str, int times) {
    if (times <= 0) {
        return "";
    }
    StringBuilder repeated = new StringBuilder();
    for (int i = 0; i < times; i++) {
        repeated.append(str);
    }
    return repeated.toString();
}

