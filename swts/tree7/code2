// 공개 함수: 특정 깊이까지 트리를 펼침
    private void expandToDepth(int targetDepth) {
        TreeItem[] items = treeViewer.getTree().getItems();
        expandToDepthRecursive(items, 1, targetDepth);
    }

    // 공개 함수: 특정 깊이까지 트리를 접음
    private void collapseToDepth(int targetDepth) {
        TreeItem[] items = treeViewer.getTree().getItems();
        collapseToDepthRecursive(items, 1, targetDepth);
    }

    // 재귀 함수: 특정 깊이까지 트리를 펼치는 기능
    private void expandToDepthRecursive(TreeItem[] items, int currentDepth, int targetDepth) {
        if (currentDepth > targetDepth) return;
        for (TreeItem item : items) {
            item.setExpanded(true);
            if (item.getItems().length > 0) {
                expandToDepthRecursive(item.getItems(), currentDepth + 1, targetDepth);
            }
        }
    }

    // 재귀 함수: 특정 깊이까지 트리를 접는 기능
    private void collapseToDepthRecursive(TreeItem[] items, int currentDepth, int targetDepth) {
        if (currentDepth > targetDepth) return;
        for (TreeItem item : items) {
            if (currentDepth == targetDepth) {
                item.setExpanded(false);
            } else if (item.getItems().length > 0) {
                collapseToDepthRecursive(item.getItems(), currentDepth + 1, targetDepth);
            }
        }
    }
