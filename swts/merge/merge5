public EReference findContainerReference(EObject eObject) {
    // 상위 객체 (container)를 가져옴
    EObject container = eObject.eContainer();
    
    // container가 없으면 null 반환
    if (container == null) {
        return null;
    }

    // 상위 객체의 모든 EReference를 확인하여, 해당 eObject를 담고 있는 containment reference를 찾음
    for (EReference reference : container.eClass().getEAllReferences()) {
        // containment reference인지 확인
        if (reference.isContainment()) {
            Object value = container.eGet(reference);
            
            // reference가 리스트(EList)인 경우 (1대N 관계)
            if (value instanceof EList<?>) {
                EList<?> list = (EList<?>) value;
                if (list.contains(eObject)) {
                    return reference;  // eObject가 리스트에 포함되어 있으면 이 reference가 container 역할을 함
                }
            } 
            // reference가 단일 객체인 경우 (1대1 관계)
            else if (value == eObject) {
                return reference;  // eObject가 직접 담긴 reference가 container 역할을 함
            }
        }
    }
    
    // container reference를 찾지 못하면 null 반환
    return null;
}



import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EStructuralFeature;

public void addToEObjectContainmentEList(EObject containerObject, EObject newEObject, String featureName) {
    // featureName 속성을 가져옴
    EStructuralFeature feature = containerObject.eClass().getEStructuralFeature(featureName);

    if (feature == null) {
        System.out.println("속성 '" + featureName + "'을(를) 찾을 수 없습니다.");
        return;
    }

    // 속성 값 가져오기
    Object value = containerObject.eGet(feature);

    // 속성이 EList(EObjectContainmentEList)인지 확인
    if (value instanceof EObjectContainmentEList<?>) {
        // EList에 새 EObject 추가
        EObjectContainmentEList<EObject> containmentList = (EObjectContainmentEList<EObject>) value;
        containmentList.add(newEObject);
        System.out.println("새로운 객체가 EObjectContainmentEList에 추가되었습니다.");
    } else if (value instanceof EList<?>) {
        // 일반 EList일 경우에도 추가 가능
        EList<EObject> list = (EList<EObject>) value;
        list.add(newEObject);
        System.out.println("새로운 객체가 일반 EList에 추가되었습니다.");
    } else {
        System.out.println("해당 속성은 EList가 아닙니다.");
    }
}
