import org.eclipse.emf.compare.Comparison;
import org.eclipse.emf.compare.Diff;
import org.eclipse.emf.compare.AttributeChange;
import org.eclipse.emf.compare.ReferenceChange;
import org.eclipse.emf.compare.ResourceAttachmentChange;
import org.eclipse.emf.compare.Match;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.ENamedElement;
import org.eclipse.emf.compare.scope.IComparisonScope;
import org.eclipse.emf.compare.EMFCompare;

public class EMFCompareDiffOutput {

    public static void main(String[] args) {
        // 1. EMF Compare를 사용하여 두 모델을 비교하여 Comparison 객체 생성
        IComparisonScope scope = ...; // 비교할 두 모델의 범위 설정
        Comparison comparison = EMFCompare.builder().build().compare(scope);

        // 2. Diff 리스트 순회
        for (Diff diff : comparison.getDifferences()) {
            // 3. Diff 객체에서 의미 있는 값들 출력
            printDiffDetails(diff);
        }
    }

    private static void printDiffDetails(Diff diff) {
        // Match 객체를 사용해 비교된 객체 가져오기
        Match match = diff.getMatch();
        EObject leftObject = match.getLeft();   // 왼쪽 모델의 객체
        EObject rightObject = match.getRight(); // 오른쪽 모델의 객체

        // 변경된 요소의 이름 출력 (ENamedElement인 경우)
        if (leftObject instanceof ENamedElement) {
            String leftName = ((ENamedElement) leftObject).getName();
            System.out.println("Left element name: " + leftName);
        }

        if (rightObject instanceof ENamedElement) {
            String rightName = ((ENamedElement) rightObject).getName();
            System.out.println("Right element name: " + rightName);
        }

        // Diff 객체의 구체적인 유형에 따라 출력
        if (diff instanceof AttributeChange) {
            AttributeChange attributeChange = (AttributeChange) diff;
            String attributeName = attributeChange.getAttribute().getName();
            System.out.println("Attribute changed: " + attributeName);
            System.out.println("Change type: " + diff.getKind()); // ADD, DELETE, CHANGE
        }

        if (diff instanceof ReferenceChange) {
            ReferenceChange referenceChange = (ReferenceChange) diff;
            String referenceName = referenceChange.getReference().getName();
            System.out.println("Reference changed: " + referenceName);
            System.out.println("Change type: " + diff.getKind()); // ADD, DELETE, CHANGE
        }

        if (diff instanceof ResourceAttachmentChange) {
            System.out.println("Resource attachment change detected.");
            System.out.println("Change type: " + diff.getKind()); // ADD, DELETE, CHANGE
        }

        // Diff의 종류와 관련된 상세 정보 출력
        System.out.println("Diff kind: " + diff.getKind()); // ADD, DELETE, CHANGE, MOVE
        System.out.println("Diff source: " + diff.getSource()); // 왼쪽, 오른쪽 또는 양쪽
    }
}


import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.common.util.URI;

public URI getEObjectURI(EObject eObject) {
    if (eObject.eResource() != null) {
        Resource resource = eObject.eResource();
        URI uri = resource.getURI().appendFragment(resource.getURIFragment(eObject));
        return uri;
    }
    return null;
}
